#!/usr/bin/env bash
# Derived from http://zonca.github.io/2013/09/automatically-build-pelican-and-publish-to-github-pages.html

BRANCH=master
TARGET_REPO=pauschaleaussagen/pauschaleaussagen.github.io.git
PELICAN_OUTPUT_FOLDER=output
REMOTE_OUTPUT_FOLDER=remote-site

if [ "$TRAVIS" == "true" ]; then
    echo "Deploying site to GitHub Pages via Travis CI."
    git config --global user.email "travis@travis-ci.org"
    git config --global user.name "Travis CI"
else
    # If being run locally, Pelican needs to generate site files
    rootPath="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    GH_TOKEN="git" # set GH_TOKEN variable to "git" for correct GITHUB_REPO URL
    cd $rootPath
    pelican -s publishconf.py
fi

# Pull hash and commit message of most recent commit
commitHash=`git rev-parse HEAD`
commitMessage=`git log -1 --pretty=%B`

# Clone the GitHub Pages branch and rsync it with the newly generated files
GITHUB_REPO=https://${GH_TOKEN}@github.com/$TARGET_REPO
echo "Cloning GitHub Pages branch into $REMOTE_OUTPUT_FOLDER."
git clone --quiet --branch=$BRANCH $GITHUB_REPO $REMOTE_OUTPUT_FOLDER > /dev/null
cd $REMOTE_OUTPUT_FOLDER
rsync -r --exclude=.git --delete ../$PELICAN_OUTPUT_FOLDER/ ./

# Add, commit, and push files to the GitHub Pages branch
git add -A
git status -s

if [ "$TRAVIS" == "true" ]; then
    git commit -m "$commitMessage" -m "Generated by commit $commitHash; pushed by Travis build $TRAVIS_BUILD_NUMBER."
    git push -fq origin $BRANCH > /dev/null
else
    read -p "Manually push changes to GitHub Pages branch? [y/N] " response
    if [[ "$response" == 'y' ]] || [[ "$response" == 'Y' ]]; then
        git commit -m "$commitMessage" -m "Generated by commit $commitHash."
        git push -f origin $BRANCH
    fi

    cd $rootPath
    rm -rf -- $rootPath/$REMOTE_OUTPUT_FOLDER
    rm -rf -- $rootPath/$PELICAN_OUTPUT_FOLDER
fi
